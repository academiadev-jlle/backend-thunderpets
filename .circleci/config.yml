# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.5-alpine-ram

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      DATABASE_URL: jdbc:postgresql://localhost:5432/thunderpets
      DATABASE_USERNAME: postgres_ci
      DATABASE_PASSWORD: postgres_ci


    steps:
      - checkout

      # Setting up PostgreSQL image
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6
      - run:
          command: |
            psql -h localhost -U postgres -c "CREATE DATABASE thunderpets;"
            psql -h localhost -U postgres -c "CREATE USER postgres_ci WITH PASSWORD 'postgres_ci';"
            psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE thunderpets TO postgres_ci;"

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}
          - v2-dependencies-{{ checksum "build.gradle" }}
          - v2-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test --stacktrace
